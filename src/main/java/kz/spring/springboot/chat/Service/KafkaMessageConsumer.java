package kz.spring.springboot.chat.Service;

import com.fasterxml.jackson.databind.ObjectMapper;
import kz.spring.springboot.chat.Entity.Message;
import kz.spring.springboot.chat.Repository.MessageRepository;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

@Service
public class KafkaMessageConsumer {

    private static final Logger logger = LoggerFactory.getLogger(KafkaMessageConsumer.class);

    private final ObjectMapper objectMapper;
    private final MessageRepository messageRepository;

    public KafkaMessageConsumer(ObjectMapper objectMapper, MessageRepository messageRepository) {
        this.objectMapper = objectMapper;
        this.messageRepository = messageRepository;
    }

    @KafkaListener(topics = "chat-messages", groupId = "chat-consumer")
    public void listen(ConsumerRecord<String, String> record) {
        try {
            String messageJson = record.value();
            // –µ—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –º–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –¥–µ–±–∞–≥–∞
            // logger.debug("üì® JSON –∏–∑ Kafka: {}", messageJson);

            Message message = objectMapper.readValue(messageJson, Message.class);
            messageRepository.save(message);

            // –õ–æ–≥–∏—Ä—É–µ–º –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ, —Å–¥–µ–ª–∞–π toString() –≤ Message –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º
            logger.info("üì• –ü–æ–ª—É—á–µ–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Kafka: {}", message);

        } catch (Exception e) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Kafka", e);
        }
    }
}
